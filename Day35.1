## Kth Largest Element in BST

#include<bits/stdc++.h>
/************************************************************
    Following is the Binary Search Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
void helper(TreeNode<int>* root, vector<int> &v){
    if(root == NULL)
        return;
    helper(root->left,v);
    v.push_back(root->data);
    helper(root->right,v);
} 
int KthLargestNumber(TreeNode<int>* root, int k) 
{
    // Write your code here.
 /*   Stack<TreeNode> s = new Stack<>();
    while(true){
        while(root!=NULL){
            s.push(root);
            root = root->right;
        }
        if(s.size()==0 && k>0)
            return -1;
        root = s.pop();
        if(--k == 0)
            return root->data;
        root = root->left;
    } */
    vector<int>v;
    helper(root,v);
    if(v.size()<k)
        return -1;
    return v[v.size()-k];
}
