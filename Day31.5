## Palindrome Partitioning II

#include<bits/stdc++.h>

bool check(string str){
    int n = str.length();
    for(int i=0; i<n/2; i++){
        if(str[i] != str[n-i-1])
            return false;
    }
    return true;
}
int solve(string str, int n, int i, vector<int> &dp){
    if(i==n) return 0;
    
    if(dp[i] != -1)
        return dp[i];
    int maxi = INT_MAX;
    for(int j=i; j<n; j++){
        if(check(str.substr(i,j-i+1))){
            int temp = 1+solve(str, n, j+1,dp);
            maxi = min(maxi,temp);
        }
    }
    return dp[i]=maxi;
}

int palindromePartitioning(string str) {
    // Write your code here
    vector<int> dp(str.length(),-1);
    return solve(str, str.length(),0,dp)-1;
}
