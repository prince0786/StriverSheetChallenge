## Median of a Matrix

Approach -1   TC : O(n*mlog(n*m))
make vector arr of size (n+m) and push all the element of matrix, the sort it and then find the mid elemnt

Approach 2: Binary search 
1. Find the min and max element of matrix
2. count the element greater than min & less than max
3. then return the element having maxinum count;

#include<bits/stdc++.h>
int helper(vector<vector<int>>&matrix, int mid){
    int count=0;
    int n = matrix.size();
    int m = matrix[0].size();
    for(int i=0; i<n; i++){
        auto it = upper_bound(matrix[i].begin(), matrix[i].end(), mid);
        count += it - matrix[i].begin();
    }
    return count;
}
int getMedian(vector<vector<int>> &matrix)
{
    // Write your code here.
    int n = matrix.size();
    int m = matrix[0].size();
    int left = 1;
    int right = 100000;
    while(left<=right){
        int mid = (left+right)/2;
        int count = helper(matrix,mid);
        if(count <= (n*m)/2){
            left = mid+1;
        }
        else{
            right = mid-1;
        }
    
   }
return left;
}
