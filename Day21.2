## Path In A Tree

/*   
    template <typename T = int>
	class TreeNode
	{
		public:
		T data;
		TreeNode<T> *left;
		TreeNode<T> *right;

		TreeNode(T data)
		{
			this->data = data;
			left = NULL;
			right = NULL;
		}

		~TreeNode()
		{
			if (left != NULL)
			{
		  		delete left;
			}
			if (right != NULL)
			{
			 	delete right;
			}
		}
	};
*/
vector<int> parent(10001, -1);
void dfs(TreeNode<int>*root, int x, int par){
    if(root!=NULL){
        parent[root->data]=par;
        if(root->data==x) return;
        dfs(root->left,x,root->data);
        dfs(root->right,x,root->data);
    }
}
vector<int> pathInATree(TreeNode<int> *root, int x)
{
    // Write your code here.
    dfs(root,x,-1);
    vector<int>cool;
    
    while(x!=-1){
        cool.push_back(x);
        x=parent[x];
    }
    reverse(cool.begin(), cool.end());
    return cool;
}
