##  Coin Change  (Maximum Number of Ways to make a certain Sum)

#include<bits/stdc++.h>

long dp[11][2001];
long solve(int i, int value, int *deno, int &n){
    if(i>=n) return 0;
    if(value<0) return 0;
    if(value==0) return 1;
    
    if(dp[i][value] != -1)
        return dp[i][value];
    
    long exc = solve(i+1, value, deno, n);
    long inc = solve(i, value-deno[i], deno, n);
    
    return dp[i][value] = (exc + inc);
}
long countWaysToMakeChange(int *denominations, int n, int value)
{
    //Write your code here
    memset(dp,-1,sizeof(dp));
    return solve(0,value,denominations,n);
}
